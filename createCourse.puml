@startuml
actor       Admin                 as admin
participant ARLO                  as ARLO
boundary    arloWebHookController as arloWebHookController
collections arloWebhookService    as arloWebhookService
collections groupService          as groupService
collections licenseService        as licenseService
entity      groupRepository       as groupRepository
entity      licenseRepository     as licenseRepository
database    DB                    as DB
collections loggerService         as loggerService

admin -> ARLO : add course

group recceive and identify event of ARLO
ARLO -> arloWebHookController : CALL API: /arlo/listener
activate arloWebhookService
arloWebHookController -> arloWebhookService : CALL verifySignature(payload)

arloWebhookService -> loggerService : CALL addArloWebhookSuccessResponse(payload)

arloWebhookService -> arloWebhookService : CALL identifyEventType(payload)
end

arloWebhookService -> ARLO : /api/<Event_DATE>/auth/resources/events/{EventID}/


ARLO --> arloWebhookService : [Ok: 200] Event details JSON
deactivate ARLO

group create subgroup based on arlo event payload
arloWebhookService -> groupService : CALL createSubGroupFromArloEvent(arloEventPayload)

activate groupService
groupService -> groupRepository : CALL getParentGroupFromOrganizationId(organizationId = arloEventPayload["organizationId"])

activate groupRepository
groupRepository -> DB : getOne() query

activate DB

alt#Gold #ADE792 Success
DB -> groupRepository : GroupEntity

groupRepository -> groupService : GroupEntity

else #lightblue No organization found
DB -> groupRepository : [SqlError] No such record found
deactivate DB
groupRepository -> groupService : [SqlError] No such record found
deactivate groupRepository
groupService -> loggerService : CALL eventErrorResponse(eventType = "ArloSubGroupCreation", eventpayload, error)
groupService -> arloWebhookService : No parent group found with that organization ID
end

groupService -> groupService : CALL validateTrainingSubGroupInMasterGroup(masterGroup: GroupEntity): Returns boolean

group If no subgroup named "Training" exist in master group
groupService -> groupRepository : CALL createSubGroupForParent(masterGroup: GroupEntity, subgroupDetail: {name: "Training", Attributes})
activate groupRepository
groupRepository -> DB : insert() query
activate DB
DB -> groupRepository : GroupEntity
deactivate DB
groupRepository -> groupService : GroupEntity
deactivate groupRepository
end

groupService -> groupRepository : CALL createArloSubGroupForParentGroup(arloEventPayload, parentGroup: GroupEntity)

activate groupRepository
groupRepository -> DB : insert() query

alt#Gold #ADE792 Success
DB -> groupRepository : GroupEntity
groupRepository -> groupService : GroupEntity
else #pink Failure
activate DB
DB -> groupRepository : [SqlError] SQL Error
groupRepository -> groupService : [SqlError] SQL Error
groupService -> loggerService : CALL eventErrorResponse(eventType = "ArloSubGroupCreation", eventpayload, error)
groupService -> arloWebhookService : [Error] Unprocessable Entity, Error in creating sub group
deactivate DB
end

deactivate groupRepository

groupService -> licenseService : CALL createLicense (subGroup: GroupEntity, seatsCount = arloEventPayload["seatsCount"], product: SUMARI | PACES)

activate licenseService
licenseService -> licenseRepository : CALL createLicense(licenseDetails, subGroup: GroupEntity)

activate licenseRepository
licenseRepository -> DB : insert() query

alt#Gold #ADE792 Success
DB -> licenseRepository : LicenseEntity
licenseRepository -> licenseService : LicenseEntity
deactivate licenseRepository

licenseService -> groupService : LicenseEntity

else #pink Failure
activate DB
DB -> licenseRepository : [SqlError] SQL Error
licenseRepository -> licenseService : [SqlError] SQL Error
licenseService -> loggerService : CALL eventErrorResponse(eventType = "ArloSubGroupCreation", eventpayload, error)
licenseService -> groupService : [Error] Unprocessable Entity, Error in creating sub group license
deactivate licenseService
groupService -> arloWebhookService : [Error] Unprocessable Entity, Error in creating sub group license
deactivate DB
end

groupService -> loggerService : CALL eventSuccessResponse(eventType = "ArloSubGroupCreation", eventpayload, subGroupdetails: GroupEntity, licensedetails: LicenseEntity)
deactivate groupService
end
deactivate arloWebHookController
@enduml
