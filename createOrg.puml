@startuml
actor       Admin                 as admin
boundary    adminUI               as adminUI
control     groupController       as groupController
control     jbicController        as jbicController
collections groupService          as groupService
collections jbicService           as jbicService
entity      GroupRepository       as GroupRepository
collections arloResourcesService  as arloResourcesService
database    DB                    as DB
database    Cache                 as Cache
participant ARLO                  as ARLO

admin -> adminUI: Select organization
admin -> adminUI: Submit form
alt#Gold #lightblue Success
adminUI --> adminUI: Form valid
else #pink Failure: Form invalid
adminUI --> admin: Show form error(s)
end

group Create group and update ARLO organization
activate adminUI #lightgrey
alt#Gold #lightblue Success
adminUI -> groupController: [HTTPS POST] /group
else #pink Failure: Bad request
groupController -> adminUI: [Error: 400] Bad Request, validation failed
adminUI --> admin: show dialog box with error
end

activate groupController
groupController -> groupService : CALL create (payload)

activate groupService
groupService -> GroupRepository : CALL create (payload)

activate GroupRepository
GroupRepository -> DB : insert() query
activate DB

alt#Gold #ADE792 Success
DB --> GroupRepository : GroupEntity

GroupRepository --> groupService : GroupEntity
else #pink Failure: SQL error

DB --> GroupRepository : [Error] SQL Error

GroupRepository --> groupService: [Error] SQL Error
deactivate GroupRepository
deactivate DB
groupService -->groupController: [Error] Unprocessable Entity, Error in creating group
groupController --> adminUI : [Error: 422] Unprocessable Entity, Error in creating group
adminUI -> admin : show dialog box with error
end

groupService -> jbicService: CALL upsertOrganization (GroupEntity, payload)
activate jbicService #lightblue

group Email/Password incorrect
alt#Gold #ADE792 Success
jbicService --> arloResourcesService: CALL patchOrganization()

else #pink Failure
activate jbicController #lightgreen
jbicService --> jbicController: [Error: 500] Error in establishing connection with ARLO
jbicController --> adminUI: [Error: 500] Error in establishing connection with ARLO
deactivate jbicController
adminUI -> admin : show dialog box with error
end
end

group ARLO: update organization
activate arloResourcesService #teal

arloResourcesService -> ARLO : PATCH /auth/resources/organisations/<ARLO_Organization_id>/
activate ARLO #FFD100

note right
POST request is not supported to update organizations
end note

alt#Gold #ADE792 Success
ARLO --> arloResourcesService: [Ok: 200] Success

arloResourcesService --> jbicService : [Ok: 200] Success
else #pink Failure
ARLO --> arloResourcesService: [Error: 401] Unauthorized
ARLO --> arloResourcesService: [Error: 502] Bad gateway
ARLO --> arloResourcesService: [Error: 500] Error in updating organization
deactivate ARLO
arloResourcesService --> jbicService: [Error: 401] Unauthorized
arloResourcesService --> jbicService: [Error: 502] Bad gateway
arloResourcesService --> jbicService: [Error: 500] Error in updating organization
deactivate arloResourcesService
jbicService --> groupService: [Error] Error in updating organization in ARLO
groupService -> groupService: [Error] CALL rollbackGroup(GroupEntity)
groupService --> GroupRepository: [Error] CALL rollbackGroup(GroupEntity)
activate GroupRepository
activate DB
GroupRepository -> DB : rollback GroupEntity
DB --> GroupRepository : rollback success
deactivate DB
GroupRepository -->groupService : rollback success
deactivate GroupRepository
groupService --> groupController : [Error] Error in updating organization in ARLO
groupController --> adminUI : [Error: 503] Service not available, Error in updating organization
adminUI -> admin : show dialog box with error
end
end

jbicService --> groupService : Success
deactivate jbicService

group create sub group named "<group name> staff" into master group
groupService -> groupService : CALL createStaffSubGroupInMasterGroup(parentGroup: GroupEntity, subgroupDetails: {name: "<groupName> staff", Attributes})
groupService -> GroupRepository : CALL createSubGroupInMasterGroup(parentGroup: GroupEntity, subgroupDetails)
activate GroupRepository
GroupRepository -> DB : insert() query
activate DB
DB -> GroupRepository : GroupEntity
deactivate DB
GroupRepository -> groupService : GroupEntity
deactivate GroupRepository
end

groupService --> groupController : Success
deactivate groupService

groupController --> adminUI: [Ok: 200] Success
deactivate groupController
end

adminUI -> admin : redirect to [web page] /group/<ID>
deactivate adminUI
@enduml
